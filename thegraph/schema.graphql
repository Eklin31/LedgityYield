type LToken @entity {
  id: ID! # Token address
  symbol: String!
  tvlUpdates: [TVLUpdate!] @derivedFrom(field: "ltoken")
  aprUpdates: [APRUpdate!] @derivedFrom(field: "ltoken")
  activities: [Activity!] @derivedFrom(field: "ltoken")
  rewardsMints: [RewardsMint!] @derivedFrom(field: "ltoken")
  totalMintedRewards: BigDecimal!
}

type TVLUpdate @entity(immutable: true) {
  id: ID!
  ltoken: LToken!
  timestamp: BigInt!
  amount: BigDecimal!
}

type APRUpdate @entity(immutable: true) {
  id: ID!
  ltoken: LToken!
  timestamp: BigInt!
  apr: BigDecimal!
}

enum ActivityAction {
  Deposit
  Withdraw
}

enum ActivityStatus {
  Queued
  Cancelled
  Success # Sucess for deposits
  Fulfilled # Success for withdrawals
}

type Activity @entity {
  id: ID! # Witdhrawal request ID, or random ID if not provided in event data
  ltoken: LToken!
  timestamp: BigInt!
  account: Bytes!
  action: ActivityAction!
  amount: BigDecimal!
  status: ActivityStatus!
}

type RewardsMint @entity(immutable: true) {
  id: ID!
  ltoken: LToken!
  timestamp: BigInt!
  account: Bytes!
  balanceBefore: BigDecimal!
  revenue: BigDecimal!
  growth: BigDecimal!
}

type LTYStaking @entity {
  id: ID!
  totalStakedUpdates: [TotalStakedUpdate!] @derivedFrom(field: "staking")
}

type TotalStakedUpdate @entity(immutable: true) {
  id: ID!
  staking: LTYStaking!
  timestamp: BigInt!
  amount: BigDecimal!
}
